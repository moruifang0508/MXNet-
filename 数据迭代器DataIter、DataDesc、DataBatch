所有的数据迭代器必须具备四个条件：
1）provide_data,即每一个batch数据的描述，调用该属性方法时，返回一个列表，列表里的每一个元素为DataDesc类，这个类是一个元祖；
2）provide_label,即每一个batch标签的描述，调用该方法时，返回一个列表，列表里的每一个元素为DataDesc类，这个类是一个元祖；
3）next()函数，每次被调用时，都返回一个DataBatch类，可以通过属性data和label访问到该批量的数据和标签，最终遍历整个数据集。
4）MXNet框架下所有的迭代器都要继承基类:mx.io.DataIter。

DataDesc类：用来存储数据或标签的名称、形状、数据格式和布局，格式为[(name, shape, dtype, layout),(name, shape, dtype, layout),...]
    - 如data =[('data', (8, 3, 298, 298),<class 'numpy.float32'>,NCHW)],
    - 单标签时，返回如：label = [(softmax_plate1_label, (8,),<class 'numpy.float32'>,NCHW)]
    - 多标签时，返回如：label = [(softmax_plate1_label, (8,),<class 'numpy.float32'>,NCHW)， (softmax_plate2_label, (8,),
<class 'numpy.float32'>,NCHW)]


DataBatch类:数据迭代器调用方法next（）后返回类，可真正返回一个批量的数据或标签。需要调用两个属性data和label，就会得到其数据和标签。
